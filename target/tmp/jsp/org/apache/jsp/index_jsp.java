/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.43.v20210629
 * Generated at: 2024-05-25 17:03:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.fpt.ojtstem.model.Account;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/C:/Users/Admin/.m2/repository/org/apache/struts/struts2-core/2.5.33/struts2-core-2.5.33.jar", Long.valueOf(1713062088674L));
    _jspx_dependants.put("jar:file:/C:/Users/Admin/.m2/repository/org/apache/struts/struts2-core/2.5.33/struts2-core-2.5.33.jar!/META-INF/struts-tags.tld", Long.valueOf(1701733154000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.fpt.ojtstem.model.Account");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<title>ADMIN_NHU-CINEMA</title>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu/lib_Head.jsp", out, false);
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"theme-red\">\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu/nav_nv.jsp", out, false);
      out.write("\r\n");
      out.write("\t<section class=\"content\">\r\n");
      out.write("\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t<div class=\"row clearfix\">\r\n");
      out.write("\t\t\t\t<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n");
      out.write("\t\t\t\t\t<div class=\"card\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"body\">\r\n");
      out.write("\t\t\t\t\t\t\t<h2 class=\"card-inside-title\">\r\n");
      out.write("\t\t\t\t\t\t\t\tCHÀO MỪNG ĐẾN VỚI CA LÀM VIỆC CỦA BẠN:\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</h2>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"row clearfix\">\r\n");
      out.write("\t\t\t\t\t\t\t<!-- \t<div class=\"image-container\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"img/Nhu.png\" alt=\"Animated Image\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div> -->\r\n");
      out.write("\t\t\t\t\t\t\t</div> \r\n");
      out.write("\t\t\t\t\t\t\t<audio controls>\r\n");
      out.write("\t\t\t\t\t\t\t\t<source src=\"style/audio/jessie_j_price_tag_ft_b_o_b_Ik1R83IByoK-gucZWmzr.mp3\" type=\"audio/mpeg\">\r\n");
      out.write("\t\t\t\t\t\t\t</audio>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu/lib.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<style>\r\n");
      out.write("/* Định dạng container của hình ảnh */\r\n");
      out.write(".image-container {\r\n");
      out.write("\twidth: 300px; /* Định kích thước của container */\r\n");
      out.write("\theight: 300px;\r\n");
      out.write("\toverflow: hidden; /* Ẩn phần vượt ra ngoài của hình ảnh */\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\t/* Để có thể định vị tuyệt đối cho hình ảnh bên trong */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Định dạng hình ảnh */\r\n");
      out.write(".image-container img {\r\n");
      out.write("\twidth: 100%; /* Đảm bảo hình ảnh điền đầy container */\r\n");
      out.write("\theight: auto; /* Tự động tính toán chiều cao dựa trên chiều rộng */\r\n");
      out.write("\tdisplay: block; /* Đảm bảo hình ảnh hiển thị là một block element */\r\n");
      out.write("\tposition: absolute; /* Định vị tuyệt đối để điều khiển vị trí */\r\n");
      out.write("\ttop: 0;\r\n");
      out.write("\tleft: 0;\r\n");
      out.write("\tanimation: shake 0.5s infinite; /* Áp dụng animation cho hình ảnh */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Định nghĩa keyframes cho animation */\r\n");
      out.write("@\r\n");
      out.write("keyframes shake { 0% {\r\n");
      out.write("\ttransform: translateX(0);\r\n");
      out.write("} /* Khoảng thời gian ban đầu */\r\n");
      out.write("25\r\n");
      out.write("%\r\n");
      out.write("{\r\n");
      out.write("transform\r\n");
      out.write(":\r\n");
      out.write("translateX(\r\n");
      out.write("-5px\r\n");
      out.write(");\r\n");
      out.write("} /* Di chuyển sang trái */\r\n");
      out.write("50\r\n");
      out.write("%\r\n");
      out.write("{\r\n");
      out.write("transform\r\n");
      out.write(":\r\n");
      out.write("translateX(\r\n");
      out.write("5px\r\n");
      out.write(");\r\n");
      out.write("} /* Di chuyển sang phải */\r\n");
      out.write("75\r\n");
      out.write("%\r\n");
      out.write("{\r\n");
      out.write("transform\r\n");
      out.write(":\r\n");
      out.write("translateX(\r\n");
      out.write("-5px\r\n");
      out.write(");\r\n");
      out.write("} /* Di chuyển sang trái */\r\n");
      out.write("100\r\n");
      out.write("%\r\n");
      out.write("{\r\n");
      out.write("transform\r\n");
      out.write(":\r\n");
      out.write("translateX(\r\n");
      out.write("0\r\n");
      out.write(");\r\n");
      out.write("} /* Trở lại vị trí ban đầu */\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
